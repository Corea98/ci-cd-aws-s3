name: Frontend S3 CI/CD

on:
  push:
    # branches: [ main, develop, staging ] 
    paths: 
      - 'frontend/**'
      - '.github/workflows/deploy-aws-s3.yml'
  pull_request:
    branches: [ main, develop, staging ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/deploy-aws-s3.yml'

permissions:
  id-token: write
  contents: read

jobs:
  job:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            #{{ runner.os }}-

      - name: Gets branch on pull_request events
        if: github.event_name == 'pull_request'
        run: echo "##[set-output name=branch;]$(echo ${{ github.base_ref }})"
        id: pull_request_branch
          
      - name: Gets branch on push events
        if: github.event_name == 'push'
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: push_branch

      - name: Setup node
        if: success()
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        if: success()
        run: npm install ci

      - name: Test
        if: success()
        run: |
          npm run lint
          npm run test:prod

      - name: Build
        if: success()
        run: |
          npm run build

      - name: Setup AWS credentials
        if: success() && github.event_name == 'push' && steps.push_branch.outputs.branch == 'main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: my-github-role-action

      - name: Deploy
        if: success() && github.event_name == 'push' && steps.push_branch.outputs.branch == 'main'
        run: |
          aws s3 sync ${{ secrets.FRONTEND_BUILD_PATH }} s3://${{ secrets.AWS_S3_NAME }} --delete
      
      - name: Print Branch
        run: echo "Actual branch - ${{ steps.push_branch.outputs.branch }}${{ steps.pull_request_branch.outputs.branch }}"



